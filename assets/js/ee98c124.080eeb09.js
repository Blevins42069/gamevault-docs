"use strict";(self.webpackChunkgamevault_docs=self.webpackChunkgamevault_docs||[]).push([[5590],{9613:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(9496);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(a),f=i,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||l;return a?n.createElement(m,r(r({ref:t},c),{},{components:a})):n.createElement(m,r({ref:t},c))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,r[1]=o;for(var u=2;u<l;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}f.displayName="MDXCreateElement"},5642:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(1163),i=(a(9496),a(9613));const l={id:"fail2ban-gamevault-guide",title:"Configuring Fail2Ban for GameVault"},r=void 0,o={unversionedId:"advanced-usage/fail2ban-gamevault-guide",id:"advanced-usage/fail2ban-gamevault-guide",title:"Configuring Fail2Ban for GameVault",description:"This guide is purely theoretical and has not been personally tested by our team. We cannot guarantee its effectiveness as we do not use fail2ban. Feel free to try it out and remove this warning from the documentation if it works for you. If you find any mistakes or misconfigurations, you can also edit the guide accordingly.",source:"@site/docs/advanced-usage/failt2ban.md",sourceDirName:"advanced-usage",slug:"/advanced-usage/fail2ban-gamevault-guide",permalink:"/docs/advanced-usage/fail2ban-gamevault-guide",draft:!1,editUrl:"https://github.com/phalcode/gamevault-docs/tree/master/docs/advanced-usage/failt2ban.md",tags:[],version:"current",frontMatter:{id:"fail2ban-gamevault-guide",title:"Configuring Fail2Ban for GameVault"},sidebar:"docs",previous:{title:"API Usage",permalink:"/docs/advanced-usage/api-usage"},next:{title:"Running the Client on Linux",permalink:"/docs/advanced-usage/linux-client"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Enable Log Files and Map a Volume",id:"1-enable-log-files-and-map-a-volume",level:3},{value:"2. Identify Failed Authentication Attempts",id:"2-identify-failed-authentication-attempts",level:3},{value:"3. Create a Fail2Ban Filter",id:"3-create-a-fail2ban-filter",level:3},{value:"4. Configure Fail2Ban Jail",id:"4-configure-fail2ban-jail",level:3},{value:"5. Restart Fail2Ban",id:"5-restart-fail2ban",level:3},{value:"6. Verify Jail Status",id:"6-verify-jail-status",level:3},{value:"Conclusion",id:"conclusion",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Not tested",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This guide is purely theoretical and has not been personally tested by our team. We cannot guarantee its effectiveness as we do not use fail2ban. Feel free to try it out and remove this warning from the documentation if it works for you. If you find any mistakes or misconfigurations, you can also edit the guide accordingly.")),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"This guide explains how to set up Fail2Ban to safeguard your GameVault application against unauthorized access attempts. Fail2Ban is a tool that scans log files and blocks IP addresses exhibiting malicious behavior through the firewall."),(0,i.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fail2Ban installed on your host system"),(0,i.kt)("li",{parentName:"ul"},"Running GameVault instance as outlined in the ",(0,i.kt)("a",{parentName:"li",href:"/docs/server-docs/setup"},"server setup documentation"))),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("h3",{id:"1-enable-log-files-and-map-a-volume"},"1. Enable Log Files and Map a Volume"),(0,i.kt)("p",null,"Ensure that log files are enabled and a volume is mapped to the ",(0,i.kt)("inlineCode",{parentName:"p"},"/logs")," folder within the GameVault backend container in your ",(0,i.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"[...]\ngamevault-backend:\n    image: phalcode/gamevault-backend:latest\n    restart: unless-stopped\n    environment:\n      [...]\n      - SERVER_LOG_FILES_ENABLED: true # <--- Set this to true\n    volumes:\n      [...]\n      - /your/logs/folder:/logs # <--- Replace `/your/logs/folder` with the actual path to your log folder.\n[...]\n")),(0,i.kt)("h3",{id:"2-identify-failed-authentication-attempts"},"2. Identify Failed Authentication Attempts"),(0,i.kt)("p",null,"Failed authentication attempts will appear in the log files in the following format:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"info:    \u250f [17/Aug/2023:20:25:47 +0000] Username @ Address - GET /api/v1/users/me -> 401 - 28.231 ms - 112 - 'GameVault/1.3.0'\n")),(0,i.kt)("h3",{id:"3-create-a-fail2ban-filter"},"3. Create a Fail2Ban Filter"),(0,i.kt)("p",null,"Create a filter file for Fail2Ban by opening a terminal and executing the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/fail2ban/filter.d/gamevault-filter.conf\n")),(0,i.kt)("p",null,"Insert the following content into the file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"[Definition]\nfailregex = .*<HOST> - GET.*401\n")),(0,i.kt)("p",null,"Note that this regular expression may require adjustments. You can test it using the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"fail2ban-regex /your/logs/folder/gamevault-backend.log /etc/fail2ban/filter.d/gamevault-filter.conf\n")),(0,i.kt)("h3",{id:"4-configure-fail2ban-jail"},"4. Configure Fail2Ban Jail"),(0,i.kt)("p",null,"Modify the Fail2Ban jail configuration by executing the command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo nano /etc/fail2ban/jail.local\n")),(0,i.kt)("p",null,"Add the following block and customize the settings based on your preferences:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-conf"},"[gamevault]\nenabled = true\nfilter = gamevault-filter\nlogpath = /your/logs/folder/*.log*\nmaxretry = 10\nfindtime = 3600\nbantime = 3600\n")),(0,i.kt)("h3",{id:"5-restart-fail2ban"},"5. Restart Fail2Ban"),(0,i.kt)("p",null,"To apply the changes, restart the Fail2Ban service:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo systemctl restart fail2ban\n")),(0,i.kt)("h3",{id:"6-verify-jail-status"},"6. Verify Jail Status"),(0,i.kt)("p",null,"Check the status of the GameVault jail:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sudo fail2ban-client status gamevault\n")),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"By following these steps, you can enhance the security of your GameVault application by utilizing Fail2Ban to block IP addresses attempting unauthorized access. Remember to fine-tune the settings to suit your specific requirements. Keep in mind that the 401 response will be triggered for each unauthenticated request, which can occur frequently and become bothersome, so you may want to increase the ",(0,i.kt)("inlineCode",{parentName:"p"},"maxretry")," value slightly."),(0,i.kt)("p",null,"Credit goes to ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/69575369/14570696"},"this StackOverflow answer")," and ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Phalcode/gamevault-backend/issues/175"},"this Github issue")," for inspiring this guide."))}p.isMDXComponent=!0}}]);